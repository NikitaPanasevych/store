// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Post {
  id      String @id @default(cuid())
  title   String
  content String
  image   String
}

model Product {
  id           String  @id @default(cuid())
  name         String  @unique
  price        Float
  image        String
  description  String
  year         Int
  alcohol      Float
  quantity     Int
  volume       Float
  category     Type    @relation(fields: [categoryName], references: [name])
  categoryName String
  country      Country @relation(fields: [countryName], references: [name])
  countryName  String
  grape        Grape   @relation(fields: [grapeName], references: [name])
  grapeName    String
}

model Type {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

model Country {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

model Grape {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

//----------------------------AUTH---------------------------------//

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          UserRole  @default(USER)
  accounts      Account[]
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

//------------------------------------------------------------------------//
